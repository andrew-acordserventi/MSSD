package edu.bu.met.cs665;

import java.util.Scanner;

/**
 * Email class. Generated by the email generation factory. Contains a custom header, body, and footer, as well
 * as the customer's name and ID. Generates a total email message to send. Can be encrypted. Contains methods
 * to double check the email or send a custom email and a method to set custom encryption.
 */
public class EMail {
    private String header;
    private String body;
    private String footer;
    private String customerName;
    private int customerID;
    private String totalEMail;
    private boolean isEncrypted;

    public EMail(String name, int ID, String header, String body, String footer, boolean encrypt) {
        this.setCustomerName(name);
        this.setCustomerID(ID);
        this.setHeader(header);
        this.setBody(body);
        this.setFooter(footer);
        this.setEncrypted(encrypt);
    }

    // generates the e-mail to send
    public String generateEmail() {
        return this.getHeader() +
                "\n\nDear " + this.getCustomerName() +
                ", Customer # " + this.getCustomerID() +
                ":\n\n" + this.getBody() +
                "\n\n" + this.getFooter();
    }

    public String getHeader() {
        return header;
    }

    public void setHeader(String header) {
        this.header = header;
    }

    public String getBody() {
        return body;
    }

    public void setBody(String body) {
        this.body = body;
    }

    public String getFooter() {
        return footer;
    }

    public void setFooter(String footer) {
        this.footer = footer;
    }

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public int getCustomerID() {
        return customerID;
    }

    public void setCustomerID(int customerID) {
        this.customerID = customerID;
    }

    public String getTotalEMail() {
        return totalEMail;
    }

    // allows to check the e-mail; if it's not correct, can create a custom e-mail
    public void checkEMail() {
        Scanner scanner = new Scanner(System.in, "UTF-8");
        String check = null;
        boolean end = false;

        while (end != true) {
            System.out.println("\nIs this EMail okay to send send? (y/n)");
            check = scanner.nextLine();

            // ensures valid input
            while (!check.equals("y") && !check.equals("n")) {
                System.out.println("Invalid input.");
                System.out.println("Is this EMail okay to send send? (y/n)");
                check = scanner.nextLine();
            }

            // email is fine, exit the method
            if (check.equals("y")) {
                return;
            }

            // email is not fine, get new email header, body, and footer, generate a new email, and re-check
            else if (check.equals("n")) {
                System.out.println("Please input the header you would like to send, then press enter: ");
                this.setHeader(scanner.nextLine());
                System.out.println("Please input the body you would like to send, then press enter: ");
                this.setBody(scanner.nextLine());
                System.out.println("Please input the footer you would like to send, then press enter: ");
                this.setFooter(scanner.nextLine());
                this.setTotalEMail(this.generateEmail());
                System.out.println("\n" + this.generateEmail());
            }
        }
    }

    // if the total email has not been created, it will create it. else, allows a custom email to be set
    public void setTotalEMail(String totalEMail) {
        if (this.totalEMail == null) {
            this.totalEMail = generateEmail();
        }
        this.totalEMail = totalEMail;
    }

    public boolean isEncrypted() {
        return isEncrypted;
    }

    public void setEncrypted(boolean encrypted) {
        isEncrypted = encrypted;
    }

    // gives the option to encrypt an email
    public void encryptOption() {
        Scanner scanner = new Scanner(System.in, "UTF-8");
        String check = null;
        boolean end = false;

        while (end != true) {
            System.out.println("Do you want to encrypt this email? (y/n)");
            check = scanner.nextLine();

            // checks for valid input
            while (!check.equals("y") && !check.equals("n")) {
                System.out.println("Invalid input.");
                System.out.println("Do you want to encrypt this email? (y/n)");
                check = scanner.nextLine();
            }

            // if the email should be encrypted, set it to true
            if (check.equals("y")) {
                this.setEncrypted(true);
                return;
            }
            //else encryption to false
            else if (check.equals("n")) {
                this.setEncrypted(false);
                return;
            }
        }
    }
}
